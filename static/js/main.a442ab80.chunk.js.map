{"version":3,"sources":["store/StoreContext.js","store/Store.js","store/Model.js","components/CommandBar.jsx","components/Tile.jsx","components/NewTile.jsx","views/Billboard.jsx","components/Row.jsx","components/NewRow.jsx","views/ListEditor.jsx","serviceWorker.js","index.js","App.jsx"],"names":["createContext","Store","props","initialState","rootReducer","initialValue","type","_useReducer","useReducer","_useReducer2","Object","slicedToArray","state","dispatch","react_default","a","createElement","StoreContext","Provider","value","children","view","items","coffeeData","itemsLoaded","editing","deleting","reducer","action","savedCoffeeData","localStorage","getItem","setItem","JSON","stringify","coffees","objectSpread","parse","concat","toConsumableArray","payload","item","filter","x","id","defineProperty","key","CommandBar","_useContext","useContext","_useContext2","addingDisabled","length","keys","deletingDisabled","Menu","fixed","position","src","alt","Item","header","name","icon","active","onClick","disabled","deleted","Tile","_ref","coffeeType","price","onDelete","coffee","Segment","className","imgSrc","title","Icon","NewTile","existingCoffees","onSave","onCancel","_useState","useState","_useState2","setCoffee","_useState3","_useState4","setPrice","ref","useRef","useEffect","current","scrollIntoView","behavior","menuItems","some","y","map","text","isValid","isNaN","style","backgroundImage","opacity","uuid","toFixed","Dropdown","placeholder","options","onChange","e","data","toString","min","step","target","valueAsNumber","Billboard","Tile_Tile","NewTile_NewTile","Row","coffeeTitle","Group","horizontal","Label","attached","Button","NewRow","setTitle","url","setUrl","_useState5","_useState6","urlInvalid","setUrlInvalid","backupUrl","itemInvalid","onError","onLoad","Input","label","labelPosition","maxLength","ListEditor","Container","NewRow_NewRow","reverse","Row_Row","Boolean","window","location","hostname","match","ReactDOM","render","currentView","CommandBar_CommandBar","Billboard_Billboard","ListEditor_ListEditor","buildView","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a442ab80.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport default createContext();","import React, { useReducer } from 'react';\r\nimport StoreContext from './StoreContext';\r\n\r\nexport default function Store (props) {\r\n    const initialState = props.rootReducer(props.initialValue, { type: 'INIT' });\r\n    const [state, dispatch] = useReducer(props.rootReducer, initialState);\r\n\r\n    return (\r\n        <StoreContext.Provider value={[state, dispatch]}>\r\n            {props.children(state.view)}\r\n        </StoreContext.Provider>\r\n    );\r\n};","import {\r\n    coffees\r\n} from '../coffeeData.json';\r\n\r\nexport const initialState = {\r\n    view: '',\r\n    items: [],\r\n    coffeeData: {},\r\n    itemsLoaded: false,\r\n    editing: false,\r\n    deleting: false\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n    let items;\r\n    let coffeeData;\r\n\r\n    switch (action.type) {\r\n        case 'INIT':\r\n            const savedCoffeeData = localStorage.getItem('coffeeData');\r\n            if (savedCoffeeData == null) {\r\n                localStorage.setItem('coffeeData', JSON.stringify(coffees));\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                view: 'billboard',\r\n                items: JSON.parse(localStorage.getItem('items')) || initialState.items,\r\n                coffeeData: savedCoffeeData ? JSON.parse(savedCoffeeData) : coffees,\r\n                itemsLoaded: true\r\n            };\r\n        case 'EDIT_ON': \r\n            return {\r\n                ...state,\r\n                view: 'billboard',\r\n                editing: true,\r\n                deleting: false\r\n            };\r\n        case 'EDIT_OFF':\r\n            return {\r\n                ...state,\r\n                editing: false\r\n            };\r\n        case 'DELETE_ON':\r\n            return {\r\n                ...state,\r\n                view: 'billboard',\r\n                editing: false,\r\n                deleting: true\r\n            };\r\n        case 'DELETE_OFF':\r\n            return {\r\n                ...state,\r\n                deleting: false\r\n            };\r\n        case 'ADD_TILE':\r\n            items = [...state.items, action.payload.item];\r\n            localStorage.setItem('items', JSON.stringify(items));\r\n\r\n            return {\r\n                ...state,\r\n                items\r\n            };\r\n        case 'REMOVE_TILE':\r\n            items = state.items.filter(x => x.id !== action.payload.id);\r\n            localStorage.setItem('items', JSON.stringify(items));\r\n\r\n            return {\r\n                ...state,\r\n                items\r\n            };\r\n        case 'OPEN_VIEW':\r\n            return {\r\n                ...state,\r\n                view: action.payload.view,\r\n                editing: false,\r\n                deleting: false\r\n            };\r\n        case 'ADD_NEW_COFFEE':\r\n            coffeeData = {\r\n                ...state.coffeeData,\r\n                [action.payload.key]: action.payload.item\r\n            };\r\n\r\n            localStorage.setItem('coffeeData', JSON.stringify(coffeeData));\r\n\r\n            return {\r\n                ...state,\r\n                coffeeData\r\n            };\r\n        case 'REMOVE_COFFEE':\r\n            coffeeData = {\r\n                ...state.coffeeData\r\n            };\r\n            items = state.items.filter(x => x.key !== action.payload.key);\r\n            localStorage.setItem('items', JSON.stringify(items));\r\n\r\n            delete coffeeData[action.payload.key];\r\n            localStorage.setItem('coffeeData', JSON.stringify(coffeeData));\r\n\r\n            return {\r\n                ...state,\r\n                items,\r\n                coffeeData\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useContext } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport StoreContext from '../store/StoreContext';\r\n\r\nexport const CommandBar = () => {\r\n    const [state, dispatch] = useContext(StoreContext);\r\n    const coffeeData = state.coffeeData;\r\n\r\n    const addingDisabled = state.items.length === Object.keys(coffeeData).length || state.view !== 'billboard';\r\n    const deletingDisabled = !state.items || state.items.length === 0 || state.view !== 'billboard';\r\n\r\n    return (\r\n        <Menu id=\"command-bar\" fixed=\"top\" position=\"right\">\r\n            <img src=\"https://img.icons8.com/ios/50/000000/cafe.png\" alt=\"Coffee icon\" />\r\n            <Menu.Item header >\r\n                Welcome, grab a coffee!\r\n            </Menu.Item>\r\n            <Menu.Item\r\n                key=\"editList\"\r\n                name=\"Edit available coffees\"\r\n                icon={state.view === 'listEditor' ? 'close' : 'pencil'}\r\n                active={state.view === 'listEditor'}\r\n                onClick={() => dispatch({ type: 'OPEN_VIEW', payload: { view: state.view === 'listEditor' ? 'billboard' : 'listEditor' } })}\r\n            />\r\n\r\n            <Menu.Menu position=\"right\" >\r\n                <Menu.Item\r\n                    key=\"new\"\r\n                    name=\"Add Coffee\"\r\n                    icon={state.editing ? 'close' : 'plus square outline'}\r\n                    active={state.editing}\r\n                    disabled={addingDisabled}\r\n                    onClick={() => dispatch({ type: state.editing ? 'EDIT_OFF' : 'EDIT_ON' })}\r\n                />\r\n                <Menu.Item\r\n                    key=\"delete\"\r\n                    name={state.deleting && !deletingDisabled ? 'Done removing' : 'Remove coffees'}\r\n                    icon={state.deleting ? 'close' : 'trash alternate outline'}\r\n                    active={state.deleted}\r\n                    disabled={deletingDisabled}\r\n                    onClick={() => dispatch({ type: state.deleting ? 'DELETE_OFF' : 'DELETE_ON' })}\r\n                />\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n};","import React from 'react';\r\nimport { Segment, Icon } from 'semantic-ui-react';\r\n\r\nexport const Tile = ({ coffeeData, coffeeType, price, deleting, onDelete }) => {\r\n    const coffee = coffeeData[coffeeType];\r\n    if (!coffee) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Segment>\r\n            <div className=\"tile\">\r\n                <img src={coffee.imgSrc} alt={coffee.title} />\r\n                {deleting && (\r\n                    <div className=\"icon-container\">\r\n                        <Icon className=\"icon-wrapper trash alternate\" onClick={onDelete} />\r\n                    </div>\r\n                )}\r\n                <div className=\"coffee-info\">\r\n                    <span className=\"tile-title\">{coffee.title}</span>\r\n                    <span>{price + ' €'}</span>\r\n                </div>\r\n            </div>\r\n        </Segment>\r\n    );\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Segment, Icon, Dropdown } from 'semantic-ui-react';\r\nimport uuid from 'uuid-v4';\r\n\r\nexport const NewTile = ({ coffeeData, existingCoffees, onSave, onCancel }) => {\r\n    const [coffee, setCoffee] = useState(null);\r\n    const [price, setPrice] = useState(0);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        ref.current.scrollIntoView({ behavior: 'smooth' });\r\n    });\r\n\r\n    const handleSave = () => {\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n\r\n        const item = {\r\n            id: uuid(),\r\n            key: coffee,\r\n            price: price.toFixed(2)\r\n        };\r\n\r\n        setCoffee(null);\r\n        setPrice(0);\r\n\r\n        onSave(item);\r\n    };\r\n\r\n    const getBackgroundStyle = () => {\r\n        if (!coffeeData[coffee]) {\r\n            return {\r\n                backgroundImage: 'none'\r\n            };\r\n        }\r\n\r\n        return {\r\n            backgroundImage: `url(${coffeeData[coffee].imgSrc})`,\r\n            opacity: 0.2\r\n        };\r\n    };\r\n\r\n    const menuItems = Object.keys(coffeeData)\r\n        .filter(x => !existingCoffees.some(y => x === y.key))\r\n        .map(x => ({ text: coffeeData[x].title, value: x }));\r\n\r\n    const isValid = coffee && !isNaN(price) && price !== 0;\r\n\r\n    return (\r\n        <Segment>\r\n            <div ref={ref} className=\"tile\">\r\n                <div className=\"editing-actions\" style={getBackgroundStyle()}></div>\r\n\r\n                <div className=\"icon-container\" >\r\n                    {isValid && (<Icon className=\"icon-wrapper save outline\" onClick={handleSave} />)}\r\n                    <Icon className=\"icon-wrapper cancel\" onClick={onCancel} />\r\n                </div>\r\n\r\n                <div className=\"coffee-info\">\r\n                    <Dropdown\r\n                        placeholder=\"Choose coffee\"\r\n                        value={coffee}\r\n                        options={menuItems}\r\n                        onChange={(e, data) => setCoffee(data.value)}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"price-input\"\r\n                        placeholder=\"Price\"\r\n                        value={price === 0 ? '' : price.toString()}\r\n                        min=\"0\"\r\n                        step=\"0.1\"\r\n                        onChange={e => setPrice(e.target.valueAsNumber)}\r\n                    />\r\n                    {'€'}\r\n                </div>\r\n            </div>\r\n        </Segment>\r\n    );\r\n};","import React, { useContext } from 'react';\r\nimport StoreContext from '../store/StoreContext';\r\nimport { Tile } from '../components/Tile';\r\nimport { NewTile } from '../components/NewTile';\r\n\r\nimport '../styles/Billboard.scss';\r\n\r\nexport const Billboard = () => {\r\n    const [state, dispatch] = useContext(StoreContext);\r\n\r\n    const coffeeData = state.coffeeData;\r\n    const addingDisabled = state.items.length === Object.keys(coffeeData).length;\r\n\r\n    return (\r\n        <div id=\"billboard\">\r\n            {state.items.map(x => (\r\n                <Tile\r\n                    key={x.id}\r\n                    coffeeData={coffeeData}\r\n                    coffeeType={x.key}\r\n                    price={x.price}\r\n                    deleting={state.deleting}\r\n                    onDelete={() => dispatch({ type: 'REMOVE_TILE', payload: { id: x.id } })}\r\n                />\r\n            ))}\r\n            {state.editing && !addingDisabled && (\r\n                <NewTile\r\n                    coffeeData={coffeeData}\r\n                    existingCoffees={state.items}\r\n                    onSave={(item) => dispatch({ type: 'ADD_TILE', payload: { item } })}\r\n                    onCancel={() => dispatch({ type: 'EDIT_OFF' })}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Segment, Label, Button } from 'semantic-ui-react';\r\n\r\nexport const Row = ({ coffeeTitle, imgSrc, onDelete }) => {\r\n    return (\r\n        <Segment>\r\n            <div className=\"editor-row\">\r\n                <img src={imgSrc} alt={coffeeTitle} />\r\n                <div className=\"coffee-data\">\r\n                    <Segment.Group horizontal>\r\n                        <Segment className=\"title-segment\">\r\n                            <Label attached='top'>Title</Label>\r\n                            <div className=\"break-word\">{coffeeTitle}</div>\r\n                        </Segment>\r\n                        <Segment className=\"url-segment\">\r\n                            <Label attached='top'>Url</Label>\r\n                            <div className=\"break-word\">{imgSrc}</div>\r\n                        </Segment>\r\n                    </Segment.Group>\r\n                </div>\r\n                <Button\r\n                    className=\"coffee-delete-button\"\r\n                    icon=\"trash alternate outline\"\r\n                    onClick={onDelete}\r\n                />\r\n            </div>\r\n        </Segment>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport { Segment, Label, Button, Input } from 'semantic-ui-react';\r\nimport uuid from 'uuid-v4';\r\n\r\nexport const NewRow = ({ onSave }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [urlInvalid, setUrlInvalid] = useState(true);\r\n\r\n    const backupUrl = \"https://www.bormel-grice.com/sites/all/themes/riley_sub/img/nopicture.png\";\r\n    const itemInvalid = title === '' || url === '' || urlInvalid;\r\n\r\n    const handleImageError = (e) => {\r\n        e.target.src = backupUrl;\r\n        setUrlInvalid(true);\r\n    };\r\n\r\n    const handleImageLoad = (e) => {\r\n        if (e.target.src === backupUrl) {\r\n            setUrlInvalid(true);\r\n            return;\r\n        }\r\n\r\n        setUrlInvalid(false);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (itemInvalid) {\r\n            return;\r\n        }\r\n\r\n        onSave({\r\n            key: uuid(),\r\n            item: {\r\n                title,\r\n                imgSrc: url\r\n            }\r\n        });\r\n\r\n        setTitle('');\r\n        setUrl('');\r\n    };\r\n\r\n    return (\r\n        <Segment>\r\n            <div className=\"editor-row\">\r\n                <img\r\n                    src={url}\r\n                    alt=\"New coffee\"\r\n                    onError={handleImageError}\r\n                    onLoad={handleImageLoad}\r\n                />\r\n                <div className=\"coffee-data\">\r\n                    <Segment.Group horizontal>\r\n                        <Segment className=\"title-segment\">\r\n                            <Label attached='top'>Title</Label>\r\n                            <Input\r\n                                value={title}\r\n                                label={{ icon: 'asterisk' }}\r\n                                labelPosition='left corner'\r\n                                placeholder='Max 50 symbols'\r\n                                maxLength=\"50\"\r\n                                onChange={e => setTitle(e.target.value)}\r\n                            />\r\n                        </Segment>\r\n                        <Segment className=\"url-segment\">\r\n                            <Label attached='top'>Url</Label>\r\n                            <Input\r\n                                value={url}\r\n                                label={{ icon: 'asterisk' }}\r\n                                labelPosition='left corner'\r\n                                onChange={e => setUrl(e.target.value)}\r\n                            />\r\n                        </Segment>\r\n                    </Segment.Group>\r\n                </div>\r\n                <Button\r\n                    className=\"coffee-save-button\"\r\n                    icon=\"plus\"\r\n                    disabled={itemInvalid}\r\n                    onClick={handleSave}\r\n                />\r\n            </div>\r\n        </Segment>\r\n    );\r\n};","import React, { useContext } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport StoreContext from '../store/StoreContext';\r\nimport { Row } from '../components/Row';\r\nimport { NewRow } from '../components/NewRow';\r\n\r\nimport '../styles/ListEditor.scss';\r\n\r\nexport const ListEditor = () => {\r\n    const [state, dispatch] = useContext(StoreContext);\r\n\r\n    return (\r\n        <Container id=\"list-editor\">\r\n            <NewRow onSave={({ key, item }) => dispatch({ type: 'ADD_NEW_COFFEE', payload: { key, item } })} />\r\n            {Object.keys(state.coffeeData).reverse().map(x => (\r\n                <Row\r\n                    key={x}\r\n                    coffeeTitle={state.coffeeData[x].title}\r\n                    imgSrc={state.coffeeData[x].imgSrc}\r\n                    onDelete={() => dispatch({ type: 'REMOVE_COFFEE', payload: { key: x } })}\r\n                />\r\n            ))}\r\n        </Container>\r\n    );\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport Store from './store/Store';\r\nimport { reducer, initialState } from './store/Model';\r\nimport { CommandBar } from './components/CommandBar';\r\nimport { Billboard } from './views/Billboard';\r\nimport { ListEditor } from './views/ListEditor';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './styles/App.scss';\r\n\r\nexport default function App() {\r\n  const buildView = (view) => {\r\n    switch (view) {\r\n      case 'billboard':\r\n        return <Billboard />;\r\n      case 'listEditor':\r\n        return <ListEditor />;\r\n      default:\r\n        return <Billboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Store rootReducer={reducer} initialValue={initialState}>\r\n      {(currentView) => (\r\n        <div id=\"main\">\r\n          <CommandBar />\r\n          {buildView(currentView)}\r\n        </div>\r\n      )}\r\n    </Store>\r\n  );\r\n}"],"sourceRoot":""}